package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"app/graph/model"
	"context"
)

// SignIn is the resolver for the signIn field.
func (r *mutationResolver) SignIn(ctx context.Context, signInInput model.SignInInput) (*model.User, error) {
	user, err := r.AuthUsecase.SignIn(ctx, &signInInput)

	return user, err
}

// SignUp is the resolver for the signUp field.
func (r *mutationResolver) SignUp(ctx context.Context, signUpInput model.SignUpInput) (*model.User, error) {
	user, err := r.AuthUsecase.SignUp(ctx, &signUpInput)

	return user, err
}

// SignOut is the resolver for the signOut field.
func (r *mutationResolver) SignOut(ctx context.Context) (*model.Msg, error) {
	err := r.AuthUsecase.SignOut(ctx)
	if err != nil {
		return nil, err
	}

	return &model.Msg{
		Message: "ok",
	}, nil
}
