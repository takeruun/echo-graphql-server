package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"app/entity"
	"app/graph/model"
	"context"
	"strconv"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.CreateTodo) (*model.Todo, error) {
	todo, err := r.TodoUsecase.Create(ctx, &input)
	if err != nil {
		return nil, err
	}

	return entity.ToModelTodo(todo), nil
}

// UpdateTodo is the resolver for the updateTodo field.
func (r *mutationResolver) UpdateTodo(ctx context.Context, input model.UpdateTodo) (*model.Todo, error) {
	todo, err := r.TodoUsecase.Edit(ctx, &input)

	if err != nil {
		return nil, err
	}

	return entity.ToModelTodo(todo), nil
}

// Todo is the resolver for the todo field.
func (r *queryResolver) Todo(ctx context.Context, id string) (*model.Todo, error) {
	todoId, _ := strconv.Atoi(id)
	todo, err := r.TodoUsecase.Show(ctx, todoId)
	if err != nil {
		return nil, err
	}

	return entity.ToModelTodo(todo), nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	todos, err := r.TodoUsecase.FindAll(ctx)

	return entity.ToModelTodos(todos), err
}
