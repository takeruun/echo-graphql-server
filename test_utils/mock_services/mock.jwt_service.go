// Code generated by MockGen. DO NOT EDIT.
// Source: services/jwt_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	services "app/services"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockJwtService is a mock of JwtService interface.
type MockJwtService struct {
	ctrl     *gomock.Controller
	recorder *MockJwtServiceMockRecorder
}

// MockJwtServiceMockRecorder is the mock recorder for MockJwtService.
type MockJwtServiceMockRecorder struct {
	mock *MockJwtService
}

// NewMockJwtService creates a new mock instance.
func NewMockJwtService(ctrl *gomock.Controller) *MockJwtService {
	mock := &MockJwtService{ctrl: ctrl}
	mock.recorder = &MockJwtServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtService) EXPECT() *MockJwtServiceMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJwtService) GenerateToken(userId uint, now time.Time) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", userId, now)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtServiceMockRecorder) GenerateToken(userId, now interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwtService)(nil).GenerateToken), userId, now)
}

// ParseToken mocks base method.
func (m *MockJwtService) ParseToken(signedString string) (*services.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseToken", signedString)
	ret0, _ := ret[0].(*services.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseToken indicates an expected call of ParseToken.
func (mr *MockJwtServiceMockRecorder) ParseToken(signedString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseToken", reflect.TypeOf((*MockJwtService)(nil).ParseToken), signedString)
}
